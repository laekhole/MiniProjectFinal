<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.comment">

	<!-- 1. 댓글 목록 출력-->
	<select id="getCommentList" resultType="CommentDTO">
		select
			  commentid
			, contents
			, writer_uid
			, mod_date 
		from comments
		where delete_yn='N'
					and comment_boardid=#{comment_boardid}
					<![CDATA[
					and rownum <= 10
					]]>
		order by commentid desc
	</select>
	
	
		<!-- 1-2. 더보기 만들기 -->
	<select id="getCommentList2" resultType="CommentDTO">
		select * from (
			select 
				 commentid, contents, writer_uid, mod_date
			from comments 
			where delete_yn = 'N' 
				and	comment_boardid = #{comment_boardid}
			<if test="commentid != 0">
				<![CDATA[
				and commentid < #{commentid}
				]]>
			</if>
			order by commentid desc  
		) A 
		<![CDATA[
		where rownum <= 10
		]]>
	</select>
	
	
		<!-- 2. 댓글쓰기 -->
	<insert id="insertComment" >
		<selectKey keyProperty="commentid" resultType="int"  order="BEFORE">
			select 
				seq_comments.nextval commentid 
			from dual
		</selectKey>
		INSERT INTO comments (
		    comment_boardid
			, commentid
			, contents
			, writer_uid
		) VALUES (
		    #{comment_boardid}
			, #{commentid}
			, #{contents}
			, #{writer_uid}
		)
	</insert>


	<!-- //3. 댓글 수정 -->
	<update id="updateComment">
		update comments set 
			  contents=#{contents},
			  mod_date= sysdate
		where commentid=#{commentid}
	</update>
	
	<!-- //4. 댓글 삭제 -->
	<update id="deleteComment">
		update comments set
						delete_yn='Y' 
		where commentid=#{commentid}
	</update>
			

	<!-- 5. 게시글 삭제해도 다시 글 10개씩 보이게 하는 메서드 -->
	<select id="getcommentListBoforeN">
		 select * from (
		     select * from board
			 <![CDATA[
		     where commentid < #{commentid}
			 ]]>
			 	 and delete_yn='N'
		     order by commentid desc
		 ) A
		 <![CDATA[
		 where rownum <= 10
		 ]]>
	</select>


	
	<!-- 6. [더보기] 버튼 삭제 하기 위해 last commentid를 찾는 sql문 --> 	
	<select id="getLastCommentId" resultType="CommentDTO">
	SELECT commentid
		FROM comments
		WHERE comment_boardid=#{comment_boardid}
	   	AND delete_yn='N'
			AND ROWNUM=1
		ORDER BY commentid
	</select>
	
		<!-- 7. [더보기] 버튼 삭제 하기 위해 전체 댓글 갯수를 찾는 sql문 --> 	
	<select id="getTotalCount" resultType="CommentDTO">
	SELECT count(commentid) as totalCounts
		FROM comments
		WHERE comment_boardid=#{comment_boardid}
	   	AND delete_yn='N'
		ORDER BY commentid
	</select>
	

</mapper>