<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">

	<sql id="allSelect"> 
		select * from member 
	</sql>
		

<select id="selectAllMemberList" resultType="memberDTO">
<!-- 	<select id="selectAllMemberList"> -->
		
		<include refid="allSelect"/>
		 
		order by id desc
	</select>

	<select id="selectMemberById" resultType="memberDTO" parameterType="String">
		select *
		from member
		where id = #{id}
	</select>
	
	
	
	<insert id="insertMember" parameterType="memberDTO">
		insert into member(
			id,
			pwd, 
			uname, 
			BIRTH ,
			GENDER,
			PHONE
		) values (
			#{id}, 
			#{pwd}, 
			#{uname}, 
			#{birth},
			#{gender},
			#{phone}
		) 
	</insert>
	
	
	
	<update id="updateMember" parameterType="memberDTO">
		update member set 
			 pwd=#{pwd}
			,uname=#{uname}
			,birth=#{birth}
			,gender=#{gender}
			,phone=#{phone}
		where id=#{id}
	</update>


	<delete id="deleteMember" parameterType="String">
		delete from member
		where
		id=#{id}
	</delete>

	<delete id="deleteMembers" >
		delete from member 
		where id in
		<foreach item="id" collection="list"  open="("  separator="," close=")"> 
			#{id}		
		</foreach> 
	</delete>

	
	<!-- 사용 하지 않는 SQL들 -->



	
<!--
 	<select id="selectAllMemberList" resultMap="memResult">
		select * from t_member order by joinDate desc
	</select>
 -->
	<select id="selectName" resultType="String">
		select uname from member
		where id = 'aaa'
	</select>

	<select id="selectPwd" resultType="String">
		select pwd from member
		where id = 'aaa'
	</select>



	<select id="selectMemberByPwd" resultType="memberDTO" parameterType="String">
		
		<include refid="allSelect"/>

		where
		pwd = #{pwd}
	</select>



	<insert id="insertMember2" parameterType="java.util.Map">
		insert into t_member(id,pwd, name, email)
		values(#{id}, #{pwd}, #{name}, #{email})
	</insert>






	<!-- 동적 SQL문 -->
	<select id="searchMember" parameterType="memberDTO" resultType="memberDTO">
		select * from member
		<where>
<!--
 			<choose>
				<when test=" name != ''  and  name != null">
					uname = #{name}
				</when>
			</choose>
			
			<choose>
				<when test="phone != ''  and phone != null ">
					and phone like concat('%', concat(#{phone}, '%'))
				</when>
			</choose>
 -->			
			<if test=" name != ''  and  name != null">
				uname = #{name}
			</if>
			<if test="phone != ''  and phone != null ">
				and phone like concat('%', concat(#{phone}, '%'))
			</if>
		</where>
		order by id desc
	</select>


	<!-- <select id="searchMember" parameterType="memberDTO" resultMap="memResult"> 
		<include refid="a" /> <![CDATA[ select * from t_member ]]> <where> <choose> 
		<when test="name != '' and name != null and email != '' and email != null"> 
		name=#{name} and email=#{email} </when> <when test="name != '' and name != 
		null"> name = #{name} </when> <when test="email !='' and email != null"> 
		email = #{email} </when> </choose> </where> order by joinDate desc </select> -->

	<select id="foreachSelect" resultType="memberDTO" parameterType="java.util.Map">

		<include refid="allSelect" />
		
		where uname in
		<foreach item="item" collection="list" open="(" separator=","
			close=")">
			#{item}
		</foreach>
		order by id desc
	</select>

	<insert id="foreachInsert" parameterType="java.util.Map">
		<foreach item="item" collection="list" open="INSERT ALL"
			separator=" " close="SELECT * FROM DUAL">
			INTO t_member(id, pwd, name, email)
			VALUES (#{item.id},
			#{item.pwd},
			#{item.name},
			#{item.email})
		</foreach>
	</insert>

	<!-- <select id="selectLike" resultMap="memResult" parameterType="String" 
		> <![CDATA[ select * from t_member where name like '%'#{name}'%' ]]> </select> -->
	<!-- like 검색 -->
	<select id="selectLike" resultType="memberDTO">
		parameterType="String">
		select * from t_member
		where
		name like '%' || #{name} || '%'
	</select>
	
<!-- 	<select id="getNoticeList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="pagingBefore"/>
		    select 
		        a.* 
		    from notice a

			검색 조건 설정 하는 부분 
			<if test="searchTitle != '' and searchTitle != null">
				where title like concat(concat('%', #{searchTitle}), '%')
			</if>   
		
			order by title
					 
		<include refid="pagingAfter"/>
		
	</select>
 -->
 
 
 <!-- 	<sql id="pagingBefore"> 
			select  O.* from (
				select rownum nrow, b.* from (
	</sql>				

	<sql id="pagingAfter"> 
				) b 
				where rownum &lt;= #{endNo}
			) O
			where nrow between #{startNo} and #{endNo}
	</sql>	 -->
	
	
 	
<!-- 	<select id="getMemberList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<include refid="pagingBefore"/>
		     select 
		        a.* 
		     from member a

			 order by title 
		<include refid="pagingAfter"/>
		
	</select> -->
	
</mapper>